dist: focal
language: cpp
compiler: gcc

# needed to access tag names
git:
  depth: false

os: linux
addons:
  apt:
    packages:
    - g++-10
    - cmake
    - clang-format-10
env:
- CC=gcc-10 CXX=g++-10 CLANG_FORMAT=clang-format-10

branches:
  only:
  - master
  - devel
  - enable-github-pages

before_install:
- ${CC} --version
- ${CXX} --version
- cmake --version
- ${CLANG_FORMAT} --version

install:
- mkdir build
- cd build
- cmake ../ -DINSTALL_TESTS=ON -DCMAKE_CXX_COMPILER=${CXX}
- make install
- cd ..

jobs:
  include:
  - name: cpp
    script:
    - ./build/test/cpp/test_all
    - ./build/test/cpp/test_keywords
    - ./build/test/cpp/test_members
    - ./build/test/cpp/test_signature
    - ./build/test/cpp/test_smart_enum
    - ./build/test/cpp/test_types
    - ./build/test/cpp/test_values
  - name: cmake
    script:
    - mkdir test/cmake/build
    - cd test/cmake/build
    - cmake ../ -DCMAKE_INSTALL_PREFIX=../../../build/cmake
    - make
    - ./main
  - name: format
    install: " "
    script:
    - ${CLANG_FORMAT} $(find ./ -regex "\./\(include\|test\).*\(hpp\|cpp\)" -type f) --dry-run --Werror
  - name: deploy
    if: branch IN (master, devel)
    before_deploy:
    # Define the Git configuration
    - git config --local user.name "Miguel Ramos Pernas"
    - git config --local user.email "miguel.ramos.pernas@gmail.com"
    # Define the new and previous tags
    - export NEW_TAG=v$(cat version.txt)
    - if [[ ! ${NEW_TAG} =~ "dev" ]]; then export EXCLUDE_PATTERN='*dev*'; fi
    - export LATEST_TAG=$(git describe --tags $(git rev-list --exclude=${EXCLUDE_PATTERN} --tags --max-count=1))
    - if [[ -z ${NEW_TAG} || -z ${LATEST_TAG} ]]; then exit 1; fi
    # Change the name of the tag if we are not in master
    - if [ ${TRAVIS_BRANCH} != master ]; then export TRAVIS_TAG=devel-${NEW_TAG}; else export TRAVIS_TAG=${NEW_TAG}; fi
    # Install Ruby and github_changelog_generator
    - sudo apt-get update
    - sudo apt-get install -y ruby
    - ruby --version
    - gem install github_changelog_generator -v 1.15.2
    # Generate the changelog file
    - github_changelog_generator -u mramospe -p mpt -o ${NEW_TAG}-changelog.md --since-tag ${LATEST_TAG} --future-release ${NEW_TAG} -t ${GITHUB_TOKEN}
    - github_changelog_generator -u mramospe -p mpt -o ${NEW_TAG}-full-changelog.md --since-tag v0.0.0 --future-release ${NEW_TAG} -t ${GITHUB_TOKEN}
    before_install: " "
    install: sudo apt-get install -y doxygen
    script: " "
    deploy:
        provider: releases
        token: ${GITHUB_TOKEN}
        tag_name: ${TRAVIS_TAG}
        name: ${TRAVIS_TAG}
        file:
        - ${NEW_TAG}-changelog.md
        - ${NEW_TAG}-full-changelog.md
        skip_cleanup: true
        draft: true
        on:
          branch:
          - devel
          - master
  - name: documentation
    if: branch IN (master, devel, enable-github-pages)
    before_install: " "
    install: " "
    script: doxygen
    before_deploy:
    # Define the Git configuration
    - git config --local user.name "Miguel Ramos Pernas"
    - git config --local user.email "miguel.ramos.pernas@gmail.com"
    deploy:
      # Allow pushes
      token: ${GITHUB_TOKEN}
      # Location of the documentation
      local_dir: doc/html
      # Use Github pages deploy process
      provider: pages
      # Keep builded pages
      skip_cleanup: true
      # Incremental commit to keep old build/files from previous deployments
      keep_history: true
      # Git branch on which it should deploy (master, gh-pages...)
      target_branch: gh-pages
